package com.espada.gui.excel.importz;

import com.espada.Excel;
import com.espada.gui.excel.exportz.Pengiriman;
import com.espada.model.qKurir;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

public class Kurir extends javax.swing.JFrame {
    private DefaultTableModel model;
    private String[][] hasilImport;
    private qKurir kurir = new qKurir();
        
    /**
     * Creates new form Kurir
     */
    public Kurir() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Kurir Import");
        ImageIcon ico = new ImageIcon("logo.png");
        this.setIconImage(ico.getImage());
        btnSave.setEnabled(false);
        model= (DefaultTableModel) tableKurir.getModel();
        model.getDataVector().removeAllElements();
        revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableKurir = new javax.swing.JTable();
        btnImport = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnTemplate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        tableKurir.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Nama Kurir"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableKurir);
        if (tableKurir.getColumnModel().getColumnCount() > 0) {
            tableKurir.getColumnModel().getColumn(0).setResizable(false);
        }

        btnImport.setText("Import from Excel");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnTemplate.setText("Template Excel");
        btnTemplate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTemplateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnImport)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTemplate))
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnImport)
                            .addComponent(btnTemplate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        
        
        
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
           File selectedFile = fileChooser.getSelectedFile();
           System.out.println("Selected file: " + selectedFile.getAbsolutePath());
           Excel test = new Excel();
            test.inputFile = (String)selectedFile.getAbsolutePath();
            try {
                hasilImport=test.fromExcel();
                if(hasilImport!=null){
                int baris = hasilImport.length;
                int tempSwitch = 0;
                for(int i=0;i<baris;i++){
                    if(hasilImport[i].length==1){
                        for(int j=0;j<1;j++){
                            if(i!=0){

                                    model.addRow(new Object[]{hasilImport[i][j]});
                                    tempSwitch=1;

                             }

                        }
                    }else{
                                JOptionPane.showMessageDialog(this, "Harus ada data dan sesuai dengan format template");
                                break;
                        }
                }
                
                if(tempSwitch>=1){
                        btnSave.setEnabled(true);
                    }
                }
                
            } catch (IOException ex) {
                System.out.println(ex);
                JOptionPane.showMessageDialog(this, "Harus ada data dan sesuai dengan format template");
            }
        }
    }//GEN-LAST:event_btnImportActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        int baris = hasilImport.length;
                String namaKurir="";
                
                for(int i=0;i<baris;i++){
                    for(int j=0;j<1;j++){
                        if(i!=0){
                            
                            namaKurir = hasilImport[i][j];
                         }
                        
                    }
                    if(i!=0){
                        kurir.setKurir(namaKurir);
                    }
                }
                
                if(baris>1){
                        JOptionPane.showMessageDialog(this, "Berhasil import kurir");
                        btnSave.setEnabled(false);
                        model= (DefaultTableModel) tableKurir.getModel();
                        model.getDataVector().removeAllElements();
                        revalidate();
                 }else{
                    JOptionPane.showMessageDialog(this, "Harus ada data dan sesuai dengan format template");
                }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnTemplateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTemplateActionPerformed
        // TODO add your handling code here:
        try {
        Excel excel = new Excel();
        File source = new File("src/excel template/Kurir.xls");
        File dest;
        
        JFileChooser fc = new JFileChooser();
                int option = fc.showSaveDialog(com.espada.gui.excel.importz.Kurir.this);
                if(option == JFileChooser.APPROVE_OPTION){
                    String filename = fc.getSelectedFile().getName(); 
                    String path = fc.getSelectedFile().getParentFile().getPath();

					int len = filename.length();
					String ext = "";
					String file = "";

					if(len > 4){
						ext = filename.substring(len-4, len);
					}

					if(ext.equals(".xls")){
						file = path + "\\" + filename; 
					}else{
						file = path + "\\" + filename + ".xls"; 
					}
					
                                        dest = new File(file);
                
                                        excel.getTemplate(source, dest);
                }
        } catch (IOException ex) {
                Logger.getLogger(Kurir.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTemplateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Kurir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Kurir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Kurir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Kurir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Kurir().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnTemplate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableKurir;
    // End of variables declaration//GEN-END:variables
}
